'''
Healthy Bot
v 0.1.0-b
(c) Dolbilov Kirill 2020
'''

import vk_api
from vk_api.utils import get_random_id
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
from time import sleep
from random import randint
from datetime import datetime
from config import *


vk_session = vk_api.VkApi(token=token)
longpoll = VkBotLongPoll(vk_session, group_id=groupID)
vk = vk_session.get_api()

message = '–í—ã–ø—Ä—è–º–∏ —Å–ø–∏–Ω—É! <3'
gn_message = '–ü–æ—Ä–∞ —Å–ø–∞—Ç—å. –°–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏. üò¥'
att = 'photo-64987665_'

dogs_num = 457239133
dogs_count = 52
gn_dogs_num = 457239186
gn_dogs_count = 14
sleepTime = 10
dt = 3 # 0 for MSK 
MAX_INTERVALS = 60
intervals = MAX_INTERVALS - 1

keyboard = VkKeyboard(one_time=True)
keyboard.add_button('–í–∫–ª—é—á–∏—Ç—å', color=VkKeyboardColor.POSITIVE)
keyboard.add_button('–û—Ç–∫–ª—é—á–∏—Ç—å', color=VkKeyboardColor.NEGATIVE)
keyboard = keyboard.get_keyboard()

try:
    f = open('users.txt')
except:
    print("File doesn't exist. Make file users.txt in the same directory with config.py and bot.py")
    quit()


ids = [str for str in f.readlines()]
f.close()
for i in range(len(ids)):
    ids[i] = ids[i].replace('\n', '')


def send_msg(msg, onlineIDs, photo):
    if photo == None:
        vk_session.method('messages.send', {'message': msg,
                                            'random_id': get_random_id(),
                                            'user_ids': onlineIDs,
                                            'keyboard' : keyboard
        })
    else:
        vk_session.method('messages.send', {'message': msg,
                                            'random_id': get_random_id(),
                                            'user_ids': onlineIDs,
                                            'attachment': photo,
                                            'keyboard': keyboard
                                            })

def check_new_messages():
    changed = False
    conversations = vk_session.method('messages.getConversations', {'count': 200,
                                                                    'filter': 'unread'
                                                                    })
    if (conversations['count'] == 0): return None
    for conv in conversations['items']:
        subject_id = str(conv['conversation']['peer']['id'])
        txt = conv['last_message']['text']
        if txt == '–ù–∞—á–∞—Ç—å':
            ids.append(subject_id)
            send_msg('–í—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É', subject_id, None)
            changed = True
        if txt == '–í–∫–ª—é—á–∏—Ç—å':
            if subject_id in ids:
                send_msg('–í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É', subject_id, None)
            else:
                ids.append(subject_id)
                send_msg('–í—ã –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É', subject_id, None)
                changed = True
        if txt == '–û—Ç–∫–ª—é—á–∏—Ç—å':
            if subject_id in ids:
                send_msg(
                    '–í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç —Ä–∞—Å—Å—ã–ª–∫–∏. –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å –±–æ—Ç–æ–º. –ï—Å–ª–∏ –≤–∞–º —á—Ç–æ-—Ç–æ –Ω–µ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ä–∞—Å—Å–∫–∞–∂–∏—Ç–µ –æ–± —ç—Ç–æ–º [healthy_b0t|–∑–¥–µ—Å—å]',
                    subject_id, None)
                ids.remove(subject_id)
                changed = True
            else:
                send_msg('–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É :(', subject_id, None)
        if (changed):
            f = open('users.txt', 'w')
            for u in ids:
                f.write(u + '\n')
            f.close()


print('Bot started')
while (True):
    check_new_messages()

    intervals += 1
    if intervals == MAX_INTERVALS:
        intervals = 0
        ans = vk_session.method('users.get', {'user_ids': ','.join(list(map(str, ids))),
                                        'fields': 'online'
        })


        onlineIDs = []
        for person in ans:
            if(person['online']):
                onlineIDs.append(person['id'])
        time = datetime.now().time()
        hour = time.hour + dt
        try:
            if (hour == 23) and (time.minute < 10):
                send_msg(gn_message, ','.join(list(map(str, onlineIDs))), att + str(gn_dogs_num + randint(0,gn_dogs_count)))
                print('gn dog sended at ', time)
            elif (hour >= 10 and hour <= 22):
                send_msg(message, ','.join(list(map(str, onlineIDs))), att + str(dogs_num + randint(0,dogs_count)))
                print('dog sended at ', time)
        except Exception as e:
            print(e)
            print(onlineIDs)

    sleep(sleepTime)
